- points.each_with_index do |point, i|
  - quality = nil
  - if @qualities
    - quality = @qualities.detect { |e| e.point_id == point.id }
  .opinion
    = render :partial=>"points/report_content", :locals=>{:point=>point}
    = render :partial=>"points/flagged", :locals=>{:point=>point}
    %h2
      = numbering ? "#{i+1}. " : ""
      = link_to_unless_current tg(h(point.name)), point
    %p= tg(point.content)
    - unless point.website.blank?
      %p
        link: 
        = link_to point.website.gsub(/http[s]?:\/\//i, ''), 'http://' + point.website.gsub(/http[s]?:\/\//i, '')
    %p
      %span.name= link_to point.author_sentence, point.user, :target => :_blank
      %br/
      = l point.created_at.to_date, :format => :long_no_year
    - if logged_in?
      - if current_user.is_admin? 
        .edit_point_options
          %p= link_to tr('Remove this argument', "points"), point, :method => :delete, :confirm => 'Are you sure you want to delete this'
          %p= link_to tr('Edit this argument. Because you are an admin', "points"), edit_point_path(point)
      - elsif current_user == point.user
        - if point.is_editable?
          .edit_point_options
            %p= link_to tr('Edit your argument. You have one hour to make changes from creation time.', "points"), edit_point_path(point)
            %p= link_to tr('Remove your argument', "points"), point, :method => :delete, :confirm => 'Are you sure you want to delete this'

    -# /   %span.point_edit
    -# /     - if point.discussions_count > 0
    -# /       = link_to tr("{count} discussions", "view/points/_short_list", :count => point.discussions_count), discussions_point_url(point)
    -# /     - else
    -# /       = link_to tr("Discuss", "view/points/_short_list"), discussions_point_url(point)
    -# /     or
    -# /     \#{link_to tr("Edit", "view/points/_short_list"), new_point_revision_url(point), :title => tr("Can you make this point more persuasive? Go ahead, change it!", "view/points/_short_list")}
    -# /     this point
    -# /     - if point.has_website?
    -# /   .point_source
    -# /     = tr("Source:", "view/points/_show")
    -# /     %a{:href => point.website_link}= truncate(point.website_link, :length=>70)
    -# /     point
    -# / .point_qualities.small_text
    -# /   = render :partial => "points/button_small", :locals => {:newest_points=>defined?(newest_points) ? true : false, :point => point, :quality => quality}
    -# / %hr
